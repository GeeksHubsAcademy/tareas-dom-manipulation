{"version":3,"sources":["main.js"],"names":["document","addEventListener","createTemplateHtmlString","text","createNodeFromString","string","divNode","createElement","innerHTML","firstChild","inputNode","querySelector","event","keyCode","newTaskText","target","value","newTaskHtmlString","newTaskNode","appendChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,QAAQ,CAACC,gBAAT,CAA2B,kBAA3B,EAA+C,YAAY;AACvD,MAAIC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAC,IAAI;AAAA,2EACPA,IADO;AAAA,GAAnC;;AAIA,MAAIC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,MAAM,EAAI;AACjC,QAAIC,OAAO,GAAGN,QAAQ,CAACO,aAAT,CAAuB,KAAvB,CAAd;AACAD,IAAAA,OAAO,CAACE,SAAR,GAAoBH,MAApB;AACA,WAAOC,OAAO,CAACG,UAAf;AACH,GAJD;;AAKA,MAAIC,SAAS,GAAGV,QAAQ,CAACW,aAAT,CAAwB,cAAxB,CAAhB;AAEAD,EAAAA,SAAS,CAACT,gBAAV,CAA2B,OAA3B,EAAoC,UAASW,KAAT,EAAe;AAC/C,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACtB;AACA,UAAIC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA/B,CAFsB,CAGtB;AAEA;;AACA,UAAIC,iBAAiB,GAAGf,wBAAwB,CAACY,WAAD,CAAhD,CANsB,CAOtB;AAEA;;AACA,UAAII,WAAW,GAAGd,oBAAoB,CAACa,iBAAD,CAAtC,CAVsB,CAWtB;AAEA;;AACAjB,MAAAA,QAAQ,CAACW,aAAT,CAAuB,MAAvB,EAA+BQ,WAA/B,CAA2CD,WAA3C,EAdsB,CAgBtB;;AACAN,MAAAA,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAqB,EAArB;AAEH;AACJ,GArBD;AAuBH,CAnCD","file":"main.1f19ae8e.map","sourceRoot":"..","sourcesContent":["document.addEventListener( 'DOMContentLoaded', function () {\n    let createTemplateHtmlString = text =>  `<div class=\"task\">\n            <div class=\"text\">${text}</div>\n            <button>remove</button>\n        </div>`\n    let createNodeFromString = string => {\n        let divNode = document.createElement('div');\n        divNode.innerHTML = string;\n        return divNode.firstChild;\n    }\n    let inputNode = document.querySelector( 'header input' );\n\n    inputNode.addEventListener('keyup', function(event){\n        if (event.keyCode === 13) {\n            //get value from input\n            let newTaskText = event.target.value;\n            // console.log(newTaskText);\n\n            // creat html string from value text\n            let newTaskHtmlString = createTemplateHtmlString(newTaskText)\n            // console.log(newTaskHtmlString);\n\n            // node creation from html string\n            let newTaskNode = createNodeFromString(newTaskHtmlString)\n            // console.log(newTaskNode)\n\n            // node inject to DOM in main\n            document.querySelector('main').appendChild(newTaskNode)\n\n            // clean value\n            event.target.value = ''\n\n        }\n    })\n\n} )\n"]}